name: 'ci'

on:
  pull_request:
    types:
      - synchronize
      - opened
      - reopened
  push:
    branches:
      - main
      - 'releases/*'

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3.5.3
      - uses: ./.github/actions/setup-node
      - run: pnpm build
      - name: Compare the expected and actual dist/ directories
        id: diff
        run: |
          if [ "$(git diff --ignore-space-at-eol dist/ | wc -l)" -gt "0" ]; then
            echo "Detected uncommitted changes after build.  See status below:"
            git diff
            exit 1
          fi

  typecheck:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3.5.3
      - uses: ./.github/actions/setup-node
      - run: pnpm typecheck

  test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3.5.3
      - uses: ./.github/actions/setup-node
      - run: pnpm test

  lint:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3.5.3
      - uses: ./.github/actions/setup-node
      - run: pnpm lint

  generate:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3.5.3
      - uses: ./.github/actions/setup-node
      - run: pnpm generate
      - run: git diff --exit-code || exit 1

  pass:
    runs-on: ubuntu-22.04
    needs:
      - build
      - typecheck
      - test
      - lint
      - generate
    steps:
      - run: exit 0

  publish:
    runs-on: ubuntu-22.04
    if: github.ref == 'refs/heads/main'
    needs:
      - pass
    steps:
      - uses: actions/checkout@v3.5.3
        with:
          fetch-depth: 0
          persist-credentials: false
      - uses: pnpm/action-setup@v2.4.0
      # Ignore the value of `.node-version` because semantic-release expects v18.x.
      - uses: actions/setup-node@v3.8.0
        with:
          node-version: '18.x'
          cache: 'pnpm'
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@32691ba7c9e7063bd457bd8f2a5703138591fa58 # v1.9.0
        with:
          app_id: ${{ secrets.GH_APP_RELEASER_ID }}
          installation_id: ${{ secrets.GH_APP_RELEASER_INSTALLATION_ID }}
          private_key: ${{ secrets.GH_APP_RELEASER_PRIVATE_KEY }}
      - run: pnpm i --frozen-lockfile
      - name: Release
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: pnpm release
